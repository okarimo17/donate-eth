{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__MinimumFundAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FundMe__OwnerError",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheapWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunder",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xe17633239aafec051f1d3a0aabd7cad7db014e00222f43054e69436df0e7597c",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "956459",
    "logsBloom": "0x
    "blockHash": "0xf0b5f4842dc88160ce6ab157bc9e708a4cf7605ca7d1ba3c0a6b4df83521371e",
    "transactionHash": "0xe17633239aafec051f1d3a0aabd7cad7db014e00222f43054e69436df0e7597c",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "956459",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "5023536f10c163ea1b52865218046f1b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__MinimumFundAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FundMe__OwnerError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheapWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Pattrick collins\",\"details\":\"Fund donation contract dev\",\"kind\":\"dev\",\"methods\":{\"fund()\":{\"details\":\"implelemtnts fund function for this conteract\"}},\"title\":\"Fund donation contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"Fund donation contract dev\"}},\"notice\":\"Fund donation contract dev\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"./PriceConvertor.sol\\\";\\r\\n\\r\\nerror FundMe__MinimumFundAmount();\\r\\nerror FundMe__OwnerError();\\r\\n\\r\\n/** @title Fund donation contract\\r\\n *  @author Pattrick collins\\r\\n *  @notice Fund donation contract dev\\r\\n *  @dev Fund donation contract dev\\r\\n */\\r\\ncontract FundMe {\\r\\n    // Type declarations\\r\\n    using PriceConvertor for uint256;\\r\\n\\r\\n    // State declarations\\r\\n    uint256 public constant MINIMUM_USD = 10;\\r\\n    address private immutable i_owner;\\r\\n    address[] private s_funders;\\r\\n    mapping(address => uint256) private s_fundersHistory;\\r\\n    AggregatorV3Interface private s_priceFeed;\\r\\n\\r\\n    // modifiers\\r\\n    modifier isOwner() {\\r\\n        if (msg.sender != i_owner) revert FundMe__OwnerError();\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    // functions\\r\\n    constructor(address priceFeedAddress) {\\r\\n        i_owner = msg.sender;\\r\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *  @notice Fund donation contract dev\\r\\n     *  @dev implelemtnts fund function for this conteract\\r\\n     */\\r\\n    function fund() public payable {\\r\\n        if (msg.value.getConversionRate(s_priceFeed) < (MINIMUM_USD * 1e18))\\r\\n            revert FundMe__MinimumFundAmount();\\r\\n\\r\\n        s_funders.push(msg.sender);\\r\\n        s_fundersHistory[msg.sender] = msg.value;\\r\\n    }\\r\\n\\r\\n    function withdraw() public isOwner {\\r\\n        for (uint i = 0; i < s_funders.length; i++) {\\r\\n            address funder = s_funders[i];\\r\\n            s_fundersHistory[funder] = 0;\\r\\n        }\\r\\n        s_funders = new address[](0);\\r\\n        // send funds\\r\\n        (bool callRes, ) = payable(msg.sender).call{\\r\\n            value: address(this).balance\\r\\n        }(\\\"\\\");\\r\\n        require(callRes, \\\"call operation didn't work\\\");\\r\\n    }\\r\\n\\r\\n    function cheapWithdraw() public isOwner {\\r\\n        address[] memory funders = s_funders;\\r\\n        for (uint i = 0; i < funders.length; i++) {\\r\\n            address funder = funders[i];\\r\\n            s_fundersHistory[funder] = 0;\\r\\n        }\\r\\n        s_funders = new address[](0);\\r\\n        // send funds\\r\\n        (bool callRes, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\r\\n        require(callRes, \\\"call operation didn't work\\\");\\r\\n    }\\r\\n\\r\\n    function getOwner() public view returns (address) {\\r\\n        return i_owner;\\r\\n    }\\r\\n\\r\\n    function getFunder(uint256 index) public view returns (address) {\\r\\n        return s_funders[index];\\r\\n    }\\r\\n\\r\\n    function getAddressToAmountFunder(address funder)\\r\\n        public\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        return s_fundersHistory[funder];\\r\\n    }\\r\\n\\r\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\r\\n        return s_priceFeed;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x8a1254946631640ee0bd3481c92343ce678ff514db6bddab3465add8b84dbea0\",\"license\":\"MIT\"},\"contracts/PriceConvertor.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\n/** @title PriceConvertor contract\\r\\n *  @author Pattrick collins\\r\\n *  @notice PriceConvertor\\r\\n *  @dev PriceConvertor\\r\\n */\\r\\nlibrary PriceConvertor {\\r\\n    function lastETHUSDPrice(AggregatorV3Interface priceFeed)\\r\\n        internal\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        (\\r\\n            ,\\r\\n            /*uint80 roundID*/\\r\\n            int256 lastprice, /*uint startedAt*/ /*uint timeStamp*/ /*uint80 answeredInRound*/\\r\\n            ,\\r\\n            ,\\r\\n\\r\\n        ) = priceFeed.latestRoundData();\\r\\n        return uint256(lastprice * 1e10);\\r\\n    }\\r\\n\\r\\n    function getConversionRate(\\r\\n        uint256 ethAmount,\\r\\n        AggregatorV3Interface priceFeed\\r\\n    ) internal view returns (uint256) {\\r\\n        uint256 ethPrice = lastETHUSDPrice(priceFeed);\\r\\n        uint256 amountOnUSD = (ethAmount * ethPrice) / 1e18;\\r\\n        return amountOnUSD;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x145b48ff79c70a938c0515c46e9c994f895788561894424cb58b56944cf4213f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200116e3803806200116e83398181016040528101906200003791906200011d565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200014f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e582620000b8565b9050919050565b620000f781620000d8565b81146200010357600080fd5b50565b6000815190506200011781620000ec565b92915050565b600060208284031215620001365762000135620000b3565b5b6000620001468482850162000106565b91505092915050565b608051610fee62000180600039600081816101b5015281816103ab0152818161047901526106c00152610fee6000f3fe60806040526004361061007b5760003560e01c80639e87a5cd1161004e5780639e87a5cd146101045780639ee7eecb1461012f578063b60d42881461016c578063d7b4750c146101765761007b565b8063206ddccd146100805780633ccfd60b146100975780636b69a592146100ae578063893d20e8146100d9575b600080fd5b34801561008c57600080fd5b506100956101b3565b005b3480156100a357600080fd5b506100ac610477565b005b3480156100ba57600080fd5b506100c36106b7565b6040516100d09190610a56565b60405180910390f35b3480156100e557600080fd5b506100ee6106bc565b6040516100fb9190610ab2565b60405180910390f35b34801561011057600080fd5b506101196106e4565b6040516101269190610b2c565b60405180910390f35b34801561013b57600080fd5b5061015660048036038101906101519190610b78565b61070e565b6040516101639190610a56565b60405180910390f35b610174610757565b005b34801561018257600080fd5b5061019d60048036038101906101989190610bd1565b610882565b6040516101aa9190610ab2565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610238576040517fb7f8f41d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156102bb57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610271575b5050505050905060005b81518110156103465760008282815181106102e3576102e2610bfe565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061033e90610c5c565b9150506102c5565b50600067ffffffffffffffff81111561036257610361610ca4565b5b6040519080825280602002602001820160405280156103905781602001602082028036833780820191505090505b50600090805190602001906103a6929190610996565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516103ed90610d04565b60006040518083038185875af1925050503d806000811461042a576040519150601f19603f3d011682016040523d82523d6000602084013e61042f565b606091505b5050905080610473576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046a90610d76565b60405180910390fd5b5050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104fc576040517fb7f8f41d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156105a757600080828154811061052157610520610bfe565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061059f90610c5c565b9150506104ff565b50600067ffffffffffffffff8111156105c3576105c2610ca4565b5b6040519080825280602002602001820160405280156105f15781602001602082028036833780820191505090505b5060009080519060200190610607929190610996565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161062e90610d04565b60006040518083038185875af1925050503d806000811461066b576040519150601f19603f3d011682016040523d82523d6000602084013e610670565b606091505b50509050806106b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ab90610d76565b60405180910390fd5b50565b600a81565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b670de0b6b3a7640000600a61076c9190610d96565b6107a1600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108c990919063ffffffff16565b10156107d9576040517fe296468600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b600080828154811061089757610896610bfe565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108d583610905565b90506000670de0b6b3a764000082866108ee9190610d96565b6108f89190610e07565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610953573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109779190610ec5565b5050509150506402540be4008161098e9190610f40565b915050919050565b828054828255906000526020600020908101928215610a0f579160200282015b82811115610a0e5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109b6565b5b509050610a1c9190610a20565b5090565b5b80821115610a39576000816000905550600101610a21565b5090565b6000819050919050565b610a5081610a3d565b82525050565b6000602082019050610a6b6000830184610a47565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a9c82610a71565b9050919050565b610aac81610a91565b82525050565b6000602082019050610ac76000830184610aa3565b92915050565b6000819050919050565b6000610af2610aed610ae884610a71565b610acd565b610a71565b9050919050565b6000610b0482610ad7565b9050919050565b6000610b1682610af9565b9050919050565b610b2681610b0b565b82525050565b6000602082019050610b416000830184610b1d565b92915050565b600080fd5b610b5581610a91565b8114610b6057600080fd5b50565b600081359050610b7281610b4c565b92915050565b600060208284031215610b8e57610b8d610b47565b5b6000610b9c84828501610b63565b91505092915050565b610bae81610a3d565b8114610bb957600080fd5b50565b600081359050610bcb81610ba5565b92915050565b600060208284031215610be757610be6610b47565b5b6000610bf584828501610bbc565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c6782610a3d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610c9957610c98610c2d565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610cee600083610cd3565b9150610cf982610cde565b600082019050919050565b6000610d0f82610ce1565b9150819050919050565b600082825260208201905092915050565b7f63616c6c206f7065726174696f6e206469646e277420776f726b000000000000600082015250565b6000610d60601a83610d19565b9150610d6b82610d2a565b602082019050919050565b60006020820190508181036000830152610d8f81610d53565b9050919050565b6000610da182610a3d565b9150610dac83610a3d565b9250828202610dba81610a3d565b91508282048414831517610dd157610dd0610c2d565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e1282610a3d565b9150610e1d83610a3d565b925082610e2d57610e2c610dd8565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e5781610e38565b8114610e6257600080fd5b50565b600081519050610e7481610e4e565b92915050565b6000819050919050565b610e8d81610e7a565b8114610e9857600080fd5b50565b600081519050610eaa81610e84565b92915050565b600081519050610ebf81610ba5565b92915050565b600080600080600060a08688031215610ee157610ee0610b47565b5b6000610eef88828901610e65565b9550506020610f0088828901610e9b565b9450506040610f1188828901610eb0565b9350506060610f2288828901610eb0565b9250506080610f3388828901610e65565b9150509295509295909350565b6000610f4b82610e7a565b9150610f5683610e7a565b9250828202610f6481610e7a565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610f9c57610f9b610c2d565b5b8282058414831517610fb157610fb0610c2d565b5b509291505056fea26469706673582212209e77302cc72d02fcaae30dca8b51a60a3125556349713f9978516eb54c4bc4a664736f6c63430008110033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c80639e87a5cd1161004e5780639e87a5cd146101045780639ee7eecb1461012f578063b60d42881461016c578063d7b4750c146101765761007b565b8063206ddccd146100805780633ccfd60b146100975780636b69a592146100ae578063893d20e8146100d9575b600080fd5b34801561008c57600080fd5b506100956101b3565b005b3480156100a357600080fd5b506100ac610477565b005b3480156100ba57600080fd5b506100c36106b7565b6040516100d09190610a56565b60405180910390f35b3480156100e557600080fd5b506100ee6106bc565b6040516100fb9190610ab2565b60405180910390f35b34801561011057600080fd5b506101196106e4565b6040516101269190610b2c565b60405180910390f35b34801561013b57600080fd5b5061015660048036038101906101519190610b78565b61070e565b6040516101639190610a56565b60405180910390f35b610174610757565b005b34801561018257600080fd5b5061019d60048036038101906101989190610bd1565b610882565b6040516101aa9190610ab2565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610238576040517fb7f8f41d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156102bb57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610271575b5050505050905060005b81518110156103465760008282815181106102e3576102e2610bfe565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061033e90610c5c565b9150506102c5565b50600067ffffffffffffffff81111561036257610361610ca4565b5b6040519080825280602002602001820160405280156103905781602001602082028036833780820191505090505b50600090805190602001906103a6929190610996565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516103ed90610d04565b60006040518083038185875af1925050503d806000811461042a576040519150601f19603f3d011682016040523d82523d6000602084013e61042f565b606091505b5050905080610473576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046a90610d76565b60405180910390fd5b5050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104fc576040517fb7f8f41d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156105a757600080828154811061052157610520610bfe565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061059f90610c5c565b9150506104ff565b50600067ffffffffffffffff8111156105c3576105c2610ca4565b5b6040519080825280602002602001820160405280156105f15781602001602082028036833780820191505090505b5060009080519060200190610607929190610996565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161062e90610d04565b60006040518083038185875af1925050503d806000811461066b576040519150601f19603f3d011682016040523d82523d6000602084013e610670565b606091505b50509050806106b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ab90610d76565b60405180910390fd5b50565b600a81565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b670de0b6b3a7640000600a61076c9190610d96565b6107a1600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108c990919063ffffffff16565b10156107d9576040517fe296468600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b600080828154811061089757610896610bfe565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108d583610905565b90506000670de0b6b3a764000082866108ee9190610d96565b6108f89190610e07565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610953573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109779190610ec5565b5050509150506402540be4008161098e9190610f40565b915050919050565b828054828255906000526020600020908101928215610a0f579160200282015b82811115610a0e5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109b6565b5b509050610a1c9190610a20565b5090565b5b80821115610a39576000816000905550600101610a21565b5090565b6000819050919050565b610a5081610a3d565b82525050565b6000602082019050610a6b6000830184610a47565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a9c82610a71565b9050919050565b610aac81610a91565b82525050565b6000602082019050610ac76000830184610aa3565b92915050565b6000819050919050565b6000610af2610aed610ae884610a71565b610acd565b610a71565b9050919050565b6000610b0482610ad7565b9050919050565b6000610b1682610af9565b9050919050565b610b2681610b0b565b82525050565b6000602082019050610b416000830184610b1d565b92915050565b600080fd5b610b5581610a91565b8114610b6057600080fd5b50565b600081359050610b7281610b4c565b92915050565b600060208284031215610b8e57610b8d610b47565b5b6000610b9c84828501610b63565b91505092915050565b610bae81610a3d565b8114610bb957600080fd5b50565b600081359050610bcb81610ba5565b92915050565b600060208284031215610be757610be6610b47565b5b6000610bf584828501610bbc565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c6782610a3d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610c9957610c98610c2d565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610cee600083610cd3565b9150610cf982610cde565b600082019050919050565b6000610d0f82610ce1565b9150819050919050565b600082825260208201905092915050565b7f63616c6c206f7065726174696f6e206469646e277420776f726b000000000000600082015250565b6000610d60601a83610d19565b9150610d6b82610d2a565b602082019050919050565b60006020820190508181036000830152610d8f81610d53565b9050919050565b6000610da182610a3d565b9150610dac83610a3d565b9250828202610dba81610a3d565b91508282048414831517610dd157610dd0610c2d565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e1282610a3d565b9150610e1d83610a3d565b925082610e2d57610e2c610dd8565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e5781610e38565b8114610e6257600080fd5b50565b600081519050610e7481610e4e565b92915050565b6000819050919050565b610e8d81610e7a565b8114610e9857600080fd5b50565b600081519050610eaa81610e84565b92915050565b600081519050610ebf81610ba5565b92915050565b600080600080600060a08688031215610ee157610ee0610b47565b5b6000610eef88828901610e65565b9550506020610f0088828901610e9b565b9450506040610f1188828901610eb0565b9350506060610f2288828901610eb0565b9250506080610f3388828901610e65565b9150509295509295909350565b6000610f4b82610e7a565b9150610f5683610e7a565b9250828202610f6481610e7a565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610f9c57610f9b610c2d565b5b8282058414831517610fb157610fb0610c2d565b5b509291505056fea26469706673582212209e77302cc72d02fcaae30dca8b51a60a3125556349713f9978516eb54c4bc4a664736f6c63430008110033",
  "devdoc": {
    "author": "Pattrick collins",
    "details": "Fund donation contract dev",
    "kind": "dev",
    "methods": {
      "fund()": {
        "details": "implelemtnts fund function for this conteract"
      }
    },
    "title": "Fund donation contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "fund()": {
        "notice": "Fund donation contract dev"
      }
    },
    "notice": "Fund donation contract dev",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 65,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 69,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_fundersHistory",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 72,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}